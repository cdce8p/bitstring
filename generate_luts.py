"""
This script generates the LUTs used for the various exotic floating point formats.
Its output is the luts.py file which is then used by the bitstring package.
"""

import pprint
import zlib
from bitstring.mxfp import createLUT_for_int_to_float, createLUT_for_float16_to_mxfp
from bitstring.fp8 import createLUT_for_binary8_to_float, createLUT_for_float16_to_binary8

if __name__ == '__main__':
    mxfp_formats = [(2, 1, 1),
                    (2, 3, 1),
                    (3, 2, 3),
                    (4, 3, 7),
                    (5, 2, 15)]
    binary8_formats = [(4, 8),
                       (5, 16)]
    with open('./bitstring/luts.py', 'w') as f:
        f.write("#\n# This file is generated by generate_luts.py. DO NOT EDIT.\n#\n\n")
        mxfp_luts_compressed = {}
        for (exp_bits, mantissa_bits, bias) in mxfp_formats:
            lut_int_to_float = createLUT_for_int_to_float(exp_bits, mantissa_bits, bias)
            lut_float16_to_mxfp = createLUT_for_float16_to_mxfp(lut_int_to_float, exp_bits, mantissa_bits, bias)
            lut_int_to_float_compressed = zlib.compress(lut_int_to_float, 1)
            lut_float16_to_mxfp_compressed = zlib.compress(lut_float16_to_mxfp, 1)
            mxfp_luts_compressed[(exp_bits, mantissa_bits, bias)] = (lut_int_to_float_compressed, lut_float16_to_mxfp_compressed)

        f.write("mxfp_luts_compressed = \\\n")
        pprint.pp(mxfp_luts_compressed, width=120, stream=f)

        binary8_luts_compressed = {}
        for (exp_bits, bias) in binary8_formats:
            lut_binary8_to_float = createLUT_for_binary8_to_float(exp_bits, bias)
            lut_float16_to_binary8 = createLUT_for_float16_to_binary8(lut_binary8_to_float)
            lut_binary8_to_float_compressed = zlib.compress(lut_binary8_to_float, 1)
            lut_float16_to_binary8_compressed = zlib.compress(lut_float16_to_binary8, 1)
            binary8_luts_compressed[(exp_bits, bias)] = (lut_binary8_to_float_compressed, lut_float16_to_binary8_compressed)

        f.write("\n\nbinary8_luts_compressed = \\\n")
        pprint.pp(binary8_luts_compressed, width=120, stream=f)
